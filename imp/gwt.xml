<?xml version="1.0" encoding="utf-8"?>
<project name="gwt" default="gwt.default" basedir=".">
    <import file="init.xml"/>
    <import file="build.xml"/>

    <taskdef name="for" classpath="${dir.lib.tools}/ant-contrib-1.0b3.jar" classname="net.sf.antcontrib.logic.ForTask"/>

    <property name="osgihost" value="localhost"/>
    <property name="osgiport" value="1234"/>

    <target name="gwt.allchecks" description="gwt.allchecks" depends="gwt.checkstyle, gwt.findbugs, gwt.testability"/>

    <target name="gwt.quickchecks" depends="gwt.checkstyle, gwt.findbugs"/>

    <target name="gwt.antTemplates" depends="gwt.clean">
        <mkdir dir="${dir.gwt.warbuild}/WEB-INF"/>
        <delete file="${dir.gwt.warbuild}/WEB-INF/web.xml"/>

        <concat destfile="${dir.gwt.warbuild}/WEB-INF/web.xml">
            <filelist dir="${dir.gwt.webxml}" files="web_xml.prefix"/>
            <fileset dir="${dir.gwt.webxml}" includes="*.xml" />
            <filterchain>
                <replacetokens>
                    <token key="OSGIHOST" value="${osgihost}"/>
                    <token key="OSGIPORT" value="${osgiport}"/>
                </replacetokens>
            </filterchain>
        </concat>
        <for param="file">
            <path>
                <fileset dir="${dir.gwt.runtime}/" includes="*.jar"/>
            </path>
            <sequential>
                <concat destfile="${dir.gwt.warbuild}/WEB-INF/web.xml" append="true">
                    <zipfileset src="@{file}">
                        <include name="webxml/*.xml"/>
                    </zipfileset>
                    <filterchain>
                        <replacetokens>
                            <token key="OSGIHOST" value="${osgihost}"/>
                            <token key="OSGIPORT" value="${osgiport}"/>
                        </replacetokens>
                    </filterchain>
                </concat>
            </sequential>
        </for>
        <concat destfile="${dir.gwt.warbuild}/WEB-INF/web.xml" append="true" >
            <filelist dir="${dir.gwt.webxml}" files="web_xml.postfix"/>
            <filterchain>
                <replacetokens>
                    <token key="OSGIHOST" value="${osgihost}"/>
                    <token key="OSGIPORT" value="${osgiport}"/>
                </replacetokens>
            </filterchain>
        </concat>
    </target>

    <target name="gwt.checkstyle" depends="gwt.compile">
        <antcall target="qa.checkstyle">
            <param name="target" value="gwt"/>
            <param name="sourcedir" value="${dir.src.gwt}"/>
            <param name="reportdir" value="${dir.reports.checkstyle.gwt}"/>
        </antcall>
    </target>

    <target name="gwt.compile" depends="gwt.antTemplates, gwt.gxoshared">
        <javac destdir="${dir.build.gwt.generated.classes}" includes="**" debug="on" debuglevel="lines,vars,source" source="1.5" target="1.5" includeantruntime="false" encoding="utf8">
            <src>
                <pathelement path="${dir.build.gwt.generated.src}"/>
            </src>
            <classpath refid="classpath.gwt.base"/>
        </javac>
        <javac destdir="${dir.build.gwt}" includes="**" debug="on" debuglevel="lines,vars,source" source="1.5" target="1.5" includeantruntime="false" encoding="utf8">
            <src>
                <pathelement path="${dir.src.gwt}"/>
            </src>
            <classpath>
                <path refid="classpath.gwt.base"/>
                <pathelement path="${dir.build.gwt.generated.classes}"/>
            </classpath>
        </javac>
    </target>

    <target name="gwt.package" depends="gwt.compile">
        <jar destfile="${dir.gwt.dist}/gluewine.jar">
            <fileset dir="${dir.build.gwt}">
                <include name="**/*.class"/>
            </fileset>
            <!-- Get everything; source, modules, html files -->
            <fileset dir="${dir.src.gwt}">
                <exclude name="**/*.java"/>
            </fileset>
            <fileset dir="${dir.build.gwt.generated.classes}">
                <include name="**/*.class"/>
            </fileset>
            <!-- Get everything; source, modules, html files -->
            <fileset dir="${dir.build.gwt.generated.src}">
                <exclude name="**/*.java"/>
            </fileset>
        </jar>
        <copy todir="${dir.gwt.warbuild}">
            <fileset dir="${dir.gwt.warsource}" includes="**/*.*"/>
        </copy>
    </target>

    <!-- Generate API documentation -->
    <target name="gwt.javadoc" depends="gwt.compile">
        <mkdir dir="${dir.doc.api.gwt}"/>
        <javadoc packagenames="be.*" destdir="${dir.doc.api.gwt}" version="true" author="true" splitindex="true" access="package" failonerror="true" encoding="utf8">
            <sourcepath>
                <pathelement path="${dir.src.gwt}"/>
            </sourcepath>
            <classpath>
                <path refid="classpath.gwt.base"/>
                <pathelement path="${dir.build.gwt.generated.classes}"/>
            </classpath>
            <link href="http://download.oracle.com/javase/6/docs/api/"/>
        </javadoc>
    </target>

    <!-- Creates a zip containing the API doc -->
    <target name="gwt.zipdoc" depends="gwt.javadoc">
        <mkdir dir="${dir.dist.doc}"/>
        <zip zipfile="${dir.dist.doc}/${product}_${version}_gwt_doc.zip">
            <fileset dir="${dir.doc.api.gwt}">
                <include name="*/**"/>
            </fileset>
            <fileset dir="..">
                <include name="LICENSE.txt"/>
            </fileset>
        </zip>
    </target>
    <target name="gwt.findbugs" depends="gwt.compile">
        <antcall target="qa.findbugs">
            <param name="target" value="gwt"/>
            <param name="sourcedir" value="${dir.src.gwt}"/>
            <param name="classdir" value="${dir.build.gwt}"/>
            <param name="reportdir" value="${dir.reports.findbugs.gwt}"/>
        </antcall>
    </target>

    <!-- Produce testability report -->
    <target name="gwt.testability" depends="gwt.compile">
        <antcall target="qa.testability">
            <param name="target" value="gwt"/>
            <param name="classdir" value="${dir.build.osgi}"/>
            <param name="reportdir" value="${dir.reports.te.gwt}"/>
        </antcall>
    </target>

    <target name="gwt.run" description="gwt.run" depends="gwt.package">
        <java fork="true" classname="com.google.gwt.dev.DevMode">
            <jvmarg value="-Xmx512M"/>
            <classpath refid="classpath.gwt.full"/>
            <!-- arg value="-draftCompile" -->
            <arg value="-startupUrl"/>
            <arg value="Gluewine.html"/>
            <arg value="-war"/>
            <arg value="${dir.gwt.warbuild}"/>
            <arg value="org.gwt.gluewine.Gluewine"/>
        </java>
    </target>

    <target name="gwt.war" description="gwt.war" depends="gwt.package, gwt.allchecks, gwt.zipdoc">
        <java fork="true" classname="com.google.gwt.dev.Compiler">
            <jvmarg value="-Xmx1024M"/>
            <classpath refid="classpath.gwt.full"/>
            <arg value="-localWorkers"/>
            <arg value="2"/>
            <!-- arg value="-style"/>
                        <arg value="PRETTY"/-->
            <arg value="-war"/>
            <arg value="${dir.gwt.warbuild}"/>
            <arg value="org.gwt.gluewine.Gluewine"/>
        </java>
        <copy todir="${dir.gwt.warbuild}/WEB-INF/lib">
            <fileset dir="${dir.gwt.runtime}" includes="**/*.jar"/>
        </copy>
        <copy todir="${dir.gwt.warbuild}/WEB-INF/lib">
            <fileset dir="${dir.gwt.runtime}" includes="gwt-servlet.jar"/>
        </copy>
        <copy todir="${dir.gwt.warbuild}/WEB-INF/lib">
            <fileset dir="${dir.gwt.dist}" includes="gluewine.jar"/>
        </copy>
        <zip destfile="${dir.gwt.dist}/gluewine.war" basedir="${dir.gwt.warbuild}"/>
    </target>

    <target name="gwt.gxoshared">
        <java classname="be.fks.gxo.GxoFlatten">
            <classpath>
                <pathelement location="${dir.gwt.runtime}/be.fks.gxo_1.3.jar"/>
            </classpath>
            <arg value="${dir.src.osgi}"/>
            <arg value="${dir.build.gwt.generated.src}"/>
        </java>
        <copy todir="${dir.build.gwt.generated.src}">
            <fileset dir="${dir.src.gwt}" includes="**/*.gwt.xml"/>
        </copy>
    </target>

    <target name="gwt.clean" depends="gwt.init">
        <!-- Delete the antbin directory tree -->
        <delete file="${dir.gwt.dist}/gluewine.jar"/>
        <delete file="${dir.gwt.dist}/gluewine.war"/>
        <delete>
            <fileset dir="${dir.build.gwt.generated.src}"/>
            <fileset dir="${dir.build.gwt.generated.classes}"/>
            <fileset dir="${dir.build.gwt}"/>
            <fileset dir="${dir.gwt.dist}"/>
            <fileset dir="${dir.gwt.warbuild}"/>
        </delete>
    </target>

    <target name="gwt.init">
        <echo>============================================================</echo>
        <echo>|Om een specifieke OSGIServer te gebruiken :               |</echo>
        <echo>|GEBRUIK: ant -Dosgihost=host -Dosgiport=port              |</echo>
        <echo>|     bv: ant -Dosgihost=HOSGI -Dosgiport=POSGI            |</echo>
        <echo>============================================================</echo>
        <echo>OSGI-HOST = ${osgihost}</echo>
        <echo>OSGI-PORT = ${osgiport}</echo>
        <mkdir dir="${dir.build.gwt}"/>
        <mkdir dir="${dir.build.gwt.generated}"/>
        <mkdir dir="${dir.build.gwt.generated.src}"/>
        <mkdir dir="${dir.build.gwt.generated.classes}"/>
        <mkdir dir="${dir.gwt.warbuild}"/>
        <mkdir dir="${dir.gwt.dist}"/>
    </target>

    <!-- Should depend on gwt.war. To be changed back when there is usable gwt code -->
    <target name="gwt.dist" depends="gwt.allchecks, gwt.package"/>

    <target name="gwt.default" depends="gwt.quickchecks, gwt.package"/>
</project>
