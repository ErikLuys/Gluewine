<?xml version="1.0" encoding="UTF-8"?>
<project name="Bundles" basedir=".">
    <taskdef resource="net/sf/antcontrib/antcontrib.properties" classpath="${dir.lib.tools}/ant-contrib-1.0b3.jar"/>

    <target name="bundles.package" depends="bundleextra">
        <!-- Set some properties with useful build information -->
        <if>
            <equals arg1="${vcs}" arg2="git" />
            <then>
                <exec executable="git" failifexecutionfails="false" outputproperty="buildinfo.globalrevision">
                    <arg value="show"/>
                    <arg value="-s"/>
                    <arg value="--pretty=format:%h"/>
                </exec>
            </then>
        </if>
        <if>
            <equals arg1="${vcs}" arg2="svn" />
            <then>
                <exec executable="svnversion" failifexecutionfails="false" outputproperty="buildinfo.globalrevision">
                    <arg value=".."/>
                </exec>
            </then>
        </if>
        <condition property="buildinfo.globalrevision" value="">
            <not><isset property="buildinfo.globalrevision"/></not>
        </condition>
        <condition property="buildinfo.jenkins.build" value="">
            <not><isset property="buildinfo.jenkins.build"/></not>
        </condition>

        <mkdir dir="${dir.build.osgi}/manifests"/>
        <mkdir dir="${dir.build.osgi}/sums"/>
        <foreach target="bundles.bundle" param="manifest" inheritall="true" parallel="true">
            <path id="manifests">
                <fileset dir="${dir.src.osgi}">
                    <include name="**/*.manifest"/>
                </fileset>
            </path>
        </foreach>
    </target>

    <target name="bundles.bundle">
        <propertyregex property="manfile" input="${manifest}" regexp="java[\\/](.*)" select="\1" casesensitive="false"/>
        <propertyregex property="manbasefile" input="${manifest}" regexp="([^\\/]*)$" select="\1" casesensitive="false"/>
        <propertyregex property="tpack" input="${manfile}" regexp="(.*?)/?${manbasefile}" select="\1" casesensitive="false"/>
        <propertyregex property="pack" input="${tpack}" regexp="(.)$" replace="\1/" casesensitive="false" defaultValue="" />

        <loadproperties srcfile="${manifest}" encoding="utf8">
            <filterchain>
                <LineContainsRegExp>
                    <regexp pattern="^(Bundle-|Jar-Version|Group)" />
                </LineContainsRegExp>
            </filterchain>
        </loadproperties>
        <condition property="Group" value="">
            <not><isset property="Group"/></not>
        </condition>


        <if>
            <equals arg1="${framework}" arg2="osgi" />
            <then>
                <property name="bundlename" value="${Bundle-SymbolicName}" />
                <propertyregex property="fileversion" input="${Bundle-Version}" regexp="([^.]*\.[^.]*)(\..*)*" select="\1" casesensitive="false"/>
            </then>
        </if>
        <if>
            <equals arg1="${framework}" arg2="gluewine" />
            <then>
                <basename property="bundlename" file="${manifest}" suffix=".manifest"/>
                <propertyregex property="fileversion" input="${Jar-Version}" regexp="([^.]*\.[^.]*)(\..*)*" select="\1" casesensitive="false"/>
            </then>
        </if>

        <if>
            <equals arg1="${vcs}" arg2="git" />
            <then>
                <exec executable="git" outputproperty="bundle.revision">
                    <arg value="log"/>
                    <arg value="--format=%h"/>
                    <arg value="-1"/>
                    <arg value="--"/>
                    <arg value="${dir.src.osgi}/${pack}"/>
                </exec>
            </then>
        </if>
        <if>
            <equals arg1="${vcs}" arg2="svn" />
            <then>
                <exec executable="svnversion" outputproperty="bundle.revision">
                    <arg value="${dir.src.osgi}/${pack}"/>
                </exec>
            </then>
        </if>
        <condition property="bundle.revision" value="">
            <not><isset property="bundle.revision"/></not>
        </condition>

        <mkdir dir="${dir.bundle.extra}/${pack}"/>
        <union id="contents">
            <fileset dir="${dir.build.osgi}">
                <include name="${pack}/**"/>
            </fileset>
            <fileset dir="${dir.bundle.extra}/${pack}">
                <include name="**"/>
            </fileset>
            <fileset dir="${dir.src.osgi}/${pack}">
                <include name="**/*.sql"/>
                <include name="**/activation.lst"/>
            </fileset>
            <fileset dir="..">
                <include name="LICENSE.txt"/>
            </fileset>
        </union>

        <checksum algorithm="sha1" todir="${dir.build.osgi}/sums" totalproperty="bundlechecksum">
            <resources refid="contents"/>
            <fileset dir=".">
                <include name="${dir.src.osgi}/${manfile}"/>
            </fileset>
        </checksum>

        <mkdir dir="${dir.bundle.extra}/${pack}"/>
        <mkdir dir="${dir.dist.lib}/${Group}"/>
        <jar jarfile="${dir.dist.lib}/${Group}/${bundlename}-${fileversion}.jar" manifest="${dir.src.osgi}/${manfile}">
            <manifest>

                <attribute name="X-Fks-BuildDate" value="${buildinfo.timestamp}"/>
                <attribute name="X-Fks-Revision" value="${bundle.revision}"/>
                <attribute name="X-Fks-RepoRevision" value="${buildinfo.globalrevision}"/>
                <attribute name="X-Fks-BuildNumber" value="${buildinfo.jenkins.build}"/>
                <attribute name="X-Fks-Checksum" value="${bundlechecksum}"/>
            </manifest>
            <resources refid="contents"/>
        </jar>
    </target>
</project>
