<?xml version="1.0"?>
<project name="junit" default="junit.allchecks" basedir=".">
    <import file="init.xml"/>
    <import file="osgi.xml"/>

    <taskdef resource="tasks.properties">
        <classpath>
            <fileset dir="${dir.tools.cobertura}">
                <include name="cobertura.jar"/>
                <include name="lib/**/*.jar"/>
            </fileset>
        </classpath>
    </taskdef>

    <!-- Compile unit tests -->
    <target name="junit.compile" depends="osgi.compile, junit.depend">
        <javac srcdir="${dir.src.junit}" destdir="${dir.build.junit}" debug="on" debuglevel="${debuglevel}" source="${source}" target="${target}" includeantruntime="false" encoding="utf8">
            <classpath>
                <path refid="classpath.osgi.base"/>
                <pathelement location="${dir.build.osgi}"/>
            </classpath>
        </javac>
    </target>

    <target name="junit.allchecks" depends="junit.checkstyle, cobertura"/>

    <target name="junit.quickchecks" depends="junit.checkstyle, junit"/>

    <target name="junit.init" depends="init">
        <mkdir dir="${dir.build.junit}"/>
    </target>

    <!-- Clean up old unit tests class files -->
    <target name="junit.depend" depends="junit.init">
        <depend srcdir="${dir.src.junit}" destdir="${dir.build.junit}" closure="yes"/>
    </target>

    <scriptdef name="generateguid" language="javascript">
        <attribute name="property" />
        <![CDATA[
        importClass( java.util.UUID );

        project.setProperty( attributes.get( "property" ), UUID.randomUUID() );
        ]]>
    </scriptdef>

    <property name="templatedb.superuser" value="test"/>
    <property name="templatedb.superpass" value="test"/>
    <property name="templatedb.baseurl" value="jdbc:postgresql://ibiza:5433/"/>
    <property name="templatedb.logical" value="plainbean"/>
    <!--<property name="templatedb.sqlfile" value="../templates/testdata/westtoer.sql"/>-->
    <property name="templatedb.sqlfile" value="../templates/testdata/plainbean.sql"/>
    <!--<property name="templatedb.pgpassfile" value="../templates/testdata/pgpass"/>-->


    <target name="junit.initdb" depends="init">
        <tempfile property="templatedb.pgpassfile" prefix="pgpass." createfile="true" deleteonexit="true" destdir="${dir.build}"/>
        <sql driver="org.postgresql.Driver" url="${templatedb.baseurl}postgres" userid="${templatedb.superuser}" password="${templatedb.superpass}" autocommit="true" classpath="lib/java/runtime/postgresql-9.1-901.jdbc3-fksosgi-9.1.jar">
            CREATE DATABASE "${templatedb}";
        </sql>
        <echo file="${templatedb.pgpassfile}">ibiza:5433:${templatedb}:test:test</echo>
        <exec executable="chmod">
            <arg value="600"/>
            <arg value="${templatedb.pgpassfile}"/>
        </exec>
        <exec executable="psql">
            <arg value="-h"/>
            <arg value="ibiza"/>
            <arg value="-p"/>
            <arg value="5433"/>
            <arg value="-U"/>
            <arg value="test"/>
            <arg value="-d"/>
            <arg value="${templatedb}"/>
            <arg value="-f"/>
            <arg value="${templatedb.sqlfile}"/>
            <env key="PGPASSFILE" file="${templatedb.pgpassfile}"/>
        </exec>
    </target>

    <target name="junit.cleanupdb" >
        <sql driver="org.postgresql.Driver" url="${templatedb.baseurl}postgres" userid="${templatedb.superuser}" password="${templatedb.superpass}" autocommit="true" classpath="lib/java/runtime/postgresql-9.1-901.jdbc3-fksosgi-9.1.jar">
            DROP DATABASE "${templatedb}";
        </sql>
    </target>

    <!-- Run unit tests -->
    <target name="junit.run">
        <delete dir="${dir.reports.junit}"/>
        <mkdir dir="${dir.reports.junit}"/>

        <generateguid property="templatedb" />
        <antcall target="junit.initdb"/>

        <junit printsummary="yes" failureproperty="junit.fail" fork="true" forkmode="perBatch">
            <classpath refid="${junitclasspath}"/>
            <sysproperty key="net.sourceforge.cobertura.datafile" file="${dir.reports.cobertura}/cobertura.ser"/>
            <sysproperty key="templatedb.${templatedb.logical}" value="${templatedb}"/>

            <sysproperty key="templatedb.baseurl" value="${templatedb.baseurl}"/>
            <sysproperty key="templatedb.superuser" value="${templatedb.superuser}"/>
            <sysproperty key="templatedb.superpass" value="${templatedb.superpass}"/>

            <formatter type="xml"/>
            <batchtest fork="yes" todir="${dir.reports.junit}">
                <fileset dir="${dir.build.junit}">
                    <include name="**/*_Test.class"/>
                </fileset>
            </batchtest>
        </junit>

        <antcall target="junit.cleanupdb"/>

        <junitreport todir="${dir.reports.junit}">
            <fileset dir="${dir.reports.junit}">
                <include name="*.xml"/>
            </fileset>
            <report todir="${dir.reports.junit}"/>
        </junitreport>
    </target>

    <!-- Run tests with coverage reporting -->
    <target name="cobertura" depends="junit.compile" description="Runs JUnit tests with code coverage reporting">
        <!-- cobertura always needs to start from scratch, so it makes no sense to separate this into separate targets -->
        <delete dir="${dir.reports.cobertura}"/>
        <delete dir="${dir.build.cobertura}"/>
        <delete dir="${dir.tools.cobertura.src}"/>
        <mkdir dir="${dir.build.cobertura}"/>
        <mkdir dir="${dir.reports.cobertura}"/>
        <cobertura-instrument todir="${dir.build.cobertura}" datafile="${dir.reports.cobertura}/cobertura.ser">
            <fileset dir="${dir.build.osgi}">
                <include name="**/*.class"/>
            </fileset>
        </cobertura-instrument>
        <antcall target="junit.run">
            <param name="junitclasspath" value="classpath.cobertura.full"/>
        </antcall>
        <cobertura-report datafile="${dir.reports.cobertura}/cobertura.ser" format="html" destdir="${dir.reports.cobertura}" srcdir="${dir.src.osgi}"/>
        <cobertura-report datafile="${dir.reports.cobertura}/cobertura.ser" format="xml" destdir="${dir.reports.cobertura}" srcdir="${dir.src.osgi}"/>
        <fail>
            <condition>
                <and>
                    <not>
                        <isset property="ignorecheckfails"/>
                    </not>
                    <isset property="junit.fail"/>
                </and>
            </condition>
        </fail>
    </target>

    <!-- Run tests without coverage reporting -->
    <target name="junit" depends="junit.compile" description="Runs JUnit tests without code coverage reporting">
        <antcall target="junit.run">
            <param name="junitclasspath" value="classpath.junit.full"/>
        </antcall>
        <fail>
            <condition>
                <and>
                    <not>
                        <isset property="ignorecheckfails"/>
                    </not>
                    <isset property="junit.fail"/>
                </and>
            </condition>
        </fail>
    </target>

    <!-- Run checkstyle on unit tests -->
    <target name="junit.checkstyle" depends="junit.compile">
        <antcall target="qa.checkstyle">
            <param name="target" value="junit"/>
            <param name="sourcedir" value="${dir.src.junit}"/>
            <param name="reportdir" value="${dir.reports.checkstyle.junit}"/>
        </antcall>
    </target>

    <!-- Run findbugs on unit tests -->
    <target name="junit.findbugs" depends="junit.compile">
        <antcall target="qa.findbugs">
            <param name="target" value="junit"/>
            <param name="sourcedir" value="${dir.src.junit}"/>
            <param name="classdir" value="${dir.build.junit}"/>
            <param name="reportdir" value="${dir.reports.findbugs.junit}"/>
        </antcall>
    </target>
</project>
